{"version":3,"sources":["components/search-box/search-box.components.js","components/card/card-component.jsx","components/card-list/card-list.components.jsx","App.js","reportWebVitals.js","index.js"],"names":["SearchBox","placeholder","handleChange","className","type","onChange","Card","props","alt","src","monster","id","name","email","CardList","console","log","monsters","map","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uSAWeA,EARG,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACd,uBACAC,UAAU,SACVC,KAAK,SACJH,YAAaA,EACZI,SAAUH,KCGDI,G,YARF,SAACC,GAAD,OACT,sBAAKJ,UAAU,iBAAf,UACQ,qBAAKK,IAAI,WAAWC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,4BACvB,mCAAMJ,EAAMG,QAAQE,KAApB,OACA,kCAAKL,EAAMG,QAAQG,MAAnB,YCOSC,EAVD,SAACP,GAEf,OADFQ,QAAQC,IAAIT,GAEN,qBAAKJ,UAAU,YAAf,SACCI,EAAMU,SAASC,KAAI,SAAAR,GAAO,OAC7B,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UC+BZQ,G,wDAlCb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACZH,SAAW,GACXI,YAAa,IALF,E,qDAQd,WAAqB,IAAD,OAClBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAU,CAACV,SAASS,S,oBAE1C,WAAU,IAAD,OACP,EAAkCE,KAAKR,MAA/BH,EAAR,EAAQA,SAAUI,EAAlB,EAAkBA,YAClBN,QAAQC,IAAI,cAAeK,EAAa,eACxC,IAAMQ,EAAoBZ,EAASa,QAAO,SAAApB,GAAO,OAC9CW,GAAcX,EAAQG,MAAMkB,cAAcC,SAASX,EAAYU,iBAC/DV,GAAcX,EAAQE,KAAKmB,cAAcC,SAASX,EAAYU,kBAEjE,OACC,sBAAK5B,UAAU,MAAf,UACA,kDACC,cAAC,EAAD,CACCF,YAAY,kBACZC,aAAc,SAAA+B,GAAC,OAAI,EAAKN,SAAS,CAACN,YAAaY,EAAEC,OAAOC,WAEzD,cAAC,EAAD,CAAUlB,SAAYY,W,GA5BVO,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.776e4cc5.chunk.js","sourcesContent":["import React from 'react';\nimport './search-box.css';\n \nconst SearchBox = ({ placeholder, handleChange }) => (\n    <input \n    className='search' \n    type='search' \n     placeholder={placeholder}\n      onChange={handleChange}\n      />\n);\nexport default SearchBox;","import React from 'react';\nimport './card.css';\n\nconst Card = (props) => (\n    <div className=\"card-container\"> \n            <img alt=\"monsters\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\n            <h2> {props.monster.name} </h2>\n            <p> {props.monster.email} </p>\n    </div>\n);\n\nexport default Card;","import React from 'react';\nimport './card-list.css';\nimport Card from '../card/card-component';\n\n  const  CardList = (props) => {\n    console.log(props);\n      return (\n          <div className=\"card-list\">\n          {props.monsters.map(monster => (\n        <Card key={monster.id} monster={monster} /> \n         ))}\n         </div>\n         )}\n\n      export default CardList;  ","import React, { Component } from 'react';\nimport SearchBox from './components/search-box/search-box.components';\nimport CardList from  './components/card-list/card-list.components';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n     monsters:  [],\n     searchField: ''\n    };\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState( {monsters:users }))\n  }\n  render() {\n    const { monsters, searchField } = this.state;\n    console.log('searchField', searchField, 'searchField')\n    const filteredMonsters =  monsters.filter(monster => \n     ( searchField ? monster.email.toLowerCase().includes(searchField.toLowerCase()) : true) ||\n     ( searchField ? monster.name.toLowerCase().includes(searchField.toLowerCase()) : true)\n  ) \n    return (\n     <div className=\"App\">\n     <h1>Monsters Rodolex</h1>\n      <SearchBox \n       placeholder='search monsters'\n       handleChange={e => this.setState({searchField: e.target.value})} \n       />\n      <CardList monsters = {filteredMonsters} />\n     </div>\n    \n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}